
include Makefile.deps
BUILD_PATH := $(shell pwd)

define upper
$(shell echo $(1) | tr [:lower:] [:upper:])
endef

# Get the hash associated with $(1) in Makefile.deps.
# hash(bsg_manycore) returns the git commit hash for bsg_manycore
define hash
$($(call upper,$(1)_HASH))
endef

define remote
$($(call upper,$(1)_REMOTE))/$(1).git
endef


# Generate a list of the repositories with their commit hashes appended
define repo-list
$(foreach dep,$(DEPENDENCIES),$(dep)_$(call hash,$(dep)))
endef

# Define a makefile rule for the repo $(1)
# Each of the repos (and resulting directories) is named
# "<repo>_<commit_hash>". The rule for each clones the repo into the
# directory named with the commit hash and resets to the commit pointed
# to by the hash.
# Also, define <repo_name>_DIR as a variable
define nested-rule
export $(call upper, $(1))_DIR=$(BUILD_PATH)/$(1)_$(call hash, $(1))

$(1)_$(call hash,$(1)):
	git clone $(call remote,$(1)) $(BUILD_PATH)/$(1)_$(call hash,$(1))
	cd $(BUILD_PATH)/$(1)_$(call hash,$(1)) && git checkout $(call hash,$(1))
endef

# Generate a Makefile goal for each of the repositories
$(foreach dep,$(DEPENDENCIES),$(eval $(call nested-rule,$(dep))))

.PHONY: checkout-repos
checkout-repos: $(call repo-list)
